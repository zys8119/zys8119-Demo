import{s as m}from"./index-1159d8e2.js";import{d as P,r as k,b as M,e as y,o as T,c as B,f as R,_ as W}from"./index-e2d53348.js";const b={class:"growing-tree"},x=P({__name:"growing-tree",setup(C){const s=k(),e=M(()=>s.value.getContext("2d"));function r(t,o){return t=Math.ceil(t),o=Math.floor(o),Math.floor(Math.random()*(o-t))+t}return y(async()=>{s.value.width=innerWidth*window.devicePixelRatio,s.value.height=innerHeight*window.devicePixelRatio,e.value.lineWidth=1,e.value.strokeStyle="#f00",e.value.lineJoin="round";const t=()=>r(0,50),o=()=>r(50,100),c=10,[g,h]=[innerWidth/2,innerHeight],l=async([a,n],d=10,u=0)=>{const _=[[a-t()-c,n-o()],[a+t()+c,n-o()]];await Promise.all(_.map(async([i,p])=>new Promise(w=>{m(f=>{const v=f;e.value.beginPath(),e.value.moveTo(a,n),e.value.lineTo(a+(i-a)*v,n+(p-n)*v),e.value.stroke(),e.value.closePath(),f>=1&&w()},r(500,1e3))}))),u<d&&await Promise.all(_.map(i=>l(i,r(0,d),u+1)))};await l([g,h],20)}),(t,o)=>(T(),B("div",b,[R("canvas",{ref_key:"canvas",ref:s,class:"w-1/1 h-1/1 fixed"},null,512)]))}});const O=W(x,[["__scopeId","data-v-50e8dc17"]]);export{O as default};

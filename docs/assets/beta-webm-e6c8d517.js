import{c as I}from"./index-70468c8b.js";import{d as M,r as T,g as z,o as F,c as k,a as R,y as N,H as U,C as B,u as A,_ as E}from"./index-3551bf4b.js";const V=M({__name:"footer-fixed",props:{position:null,isTop:{type:Boolean},zIndex:null,color:null,className:null},setup(e){const s=e,t=T(),{height:u}=I(t),o=z(()=>({height:`${u.value}px`})),n=z(()=>({position:s.position,bottom:s.isTop?"initial":null,top:s.isTop?0:null,zIndex:s.zIndex,backgroundColor:s.color||"#ffffff"}));return(i,d)=>(F(),k("div",{style:B(A(o)),class:"footer-fixed"},[R("div",{ref_key:"contentRef",ref:t,style:B(A(n)),class:"footer-fixed-content"},[R("div",{class:N(`p-x-$gap p-y-10px ${e.className}`)},[U(i.$slots,"default",{},void 0,!0)],2)],4)],4))}});const P=E(V,[["__scopeId","data-v-65887f12"]]);(function(e){var s=typeof window=="object"&&!!window.document,t=s?window:Object,u=t.Recorder,o=u.i18n;e(u,o,o.$T,s)})(function(e,s,t,u){e.prototype.enc_wav={stable:!0,fast:!0,getTestMsg:function(){return t("gPSE::支持位数8位、16位（填在比特率里面），采样率取值无限制；此编码器仅在pcm数据前加了一个44字节的wav头，编码出来的16位wav文件去掉开头的44字节即可得到pcm（注：其他wav编码器可能不是44字节）")}};var o=function(n){var i=n.bitRate,d=i==8?8:16;i!=d&&e.CLog(t("wyw9::WAV Info: 不支持{1}位，已更新成{2}位",0,i,d),3),n.bitRate=d};e.prototype.wav=function(n,i,d){var p=this,m=p.set;o(m);var v=n.length,b=m.sampleRate,w=m.bitRate,f=v*(w/8),l=e.wav_header(1,1,b,w,f),r=l.length,a=new Uint8Array(r+f);if(a.set(l),w==8)for(var c=0;c<v;c++){var y=(n[c]>>8)+128;a[r++]=y}else a=new Int16Array(a.buffer),a.set(n,r/2);i(a.buffer,"audio/wav")},e.wav_header=function(n,i,d,p,m){var v=n==1?0:2,b=new ArrayBuffer(44+v),w=new DataView(b),f=0,l=function(c){for(var y=0;y<c.length;y++,f++)w.setUint8(f,c.charCodeAt(y))},r=function(c){w.setUint16(f,c,!0),f+=2},a=function(c){w.setUint32(f,c,!0),f+=4};return l("RIFF"),a(36+v+m),l("WAVE"),l("fmt "),a(16+v),r(n),r(i),a(d),a(d*(i*p/8)),r(i*p/8),r(p),n!=1&&r(0),l("data"),a(m),new Uint8Array(b)}});(function(e){var s=typeof window=="object"&&!!window.document,t=s?window:Object,u=t.Recorder,o=u.i18n;e(u,o,o.$T,s)})(function(e,s,t,u){var o="audio/webm",n=u&&window.MediaRecorder&&MediaRecorder.isTypeSupported(o);e.prototype.enc_webm={stable:!1,getTestMsg:function(){return t(n?"tsTW::只有比较新的浏览器支持，压缩率和mp3差不多。由于未找到对已有pcm数据进行快速编码的方法，只能按照类似边播放边收听形式把数据导入到MediaRecorder，有几秒就要等几秒。输出音频虽然可以通过比特率来控制文件大小，但音频文件中的比特率并非设定比特率，采样率由于是我们自己采样的，到这个编码器随他怎么搞":"L49q::此浏览器不支持进行webm编码，未实现MediaRecorder")}},e.prototype.webm=function(i,d,p){if(!u){p(t.G("NonBrowser-1",["webm encoder"]));return}if(!n){p(t("aG4z::此浏览器不支持把录音转成webm格式"));return}var m=this,v=m.set,b=i.length,w=v.sampleRate,f=e.Ctx,l=f.createMediaStreamDestination();l.channelCount=1;var r=new MediaRecorder(l.stream,{mimeType:o,bitsPerSecond:v.bitRate*1e3}),a=[];r.ondataavailable=function(x){a.push(x.data)},r.onstop=function(x){var C=new Blob(a,{type:o}),S=new FileReader;S.onloadend=function(){d(S.result,o)},S.readAsArrayBuffer(C)},r.onerror=function(x){p(t("PIX0::转码webm出错：{1}",0,x.message))},r.start();for(var c=f.createBuffer(1,b,w),y=c.getChannelData(0),h=0;h<b;h++){var g=i[h];g=g<0?g/32768:g/32767,y[h]=g}var _=f.createBufferSource();_.channelCount=1,_.buffer=c,_.connect(l),_.start?_.start():_.noteOn(0),_.onended=function(){r.stop()}}});export{P as _};

import{s as m}from"./index-1159d8e2.js";import{d as P,r as k,g as M,h as y,o as T,c as B,a as R,_ as W}from"./index-3551bf4b.js";const x={class:"growing-tree"},C=P({__name:"growing-tree",setup(H){const s=k(),e=M(()=>s.value.getContext("2d"));function r(t,a){return t=Math.ceil(t),a=Math.floor(a),Math.floor(Math.random()*(a-t))+t}return y(async()=>{s.value.width=innerWidth*window.devicePixelRatio,s.value.height=innerHeight*window.devicePixelRatio,e.value.lineWidth=1,e.value.strokeStyle="#f00",e.value.lineJoin="round";const t=()=>r(0,50),a=()=>r(50,100),c=10,[g,h]=[innerWidth/2,innerHeight],l=async([o,n],d=10,u=0)=>{const _=[[o-t()-c,n-a()],[o+t()+c,n-a()]];await Promise.all(_.map(async([i,p])=>new Promise(w=>{m(f=>{const v=f;e.value.beginPath(),e.value.moveTo(o,n),e.value.lineTo(o+(i-o)*v,n+(p-n)*v),e.value.stroke(),e.value.closePath(),f>=1&&w()},r(500,1e3))}))),u<d&&await Promise.all(_.map(i=>l(i,r(0,d),u+1)))};await l([g,h],20)}),(t,a)=>(T(),B("div",x,[R("canvas",{ref_key:"canvas",ref:s,class:"w-1/1 h-1/1 fixed"},null,512)]))}});const b=W(C,[["__scopeId","data-v-50e8dc17"]]);export{b as default};
